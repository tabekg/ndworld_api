"""empty message

Revision ID: f664da655c47
Revises: b4fa46baa521
Create Date: 2025-06-02 18:02:21.787398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f664da655c47'
down_revision: Union[str, None] = 'b4fa46baa521'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('resume_categories',
    sa.Column('resume_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('resume_id', 'category_id')
    )
    op.drop_table('job_offer_resumes')
    op.drop_index('ix_job_postings_id', table_name='job_postings')
    op.drop_table('job_postings')
    op.drop_index('ix_job_offers_id', table_name='job_offers')
    op.drop_table('job_offers')
    op.drop_column('companies', 'resume_fields')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('companies', sa.Column('resume_fields', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_table('job_offers',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_posting_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'viewed', 'closed', 'withdrawn', 'expired', name='jobofferstatusenum'), server_default=sa.text("'pending'::jobofferstatusenum"), autoincrement=False, nullable=False),
    sa.Column('sent_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('reviewed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('closed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('job_offers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='job_offers_company_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_posting_id'], ['job_postings.id'], name='job_offers_job_posting_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='job_offers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_job_offers_id', 'job_offers', ['id'], unique=False)
    op.create_table('job_postings',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('draft', 'published', 'closed', 'archived', name='jobpostingstatusenum'), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('job_postings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='job_postings_company_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='job_postings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_job_postings_id', 'job_postings', ['id'], unique=False)
    op.create_table('job_offer_resumes',
    sa.Column('job_offer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('resume_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], name='job_offer_resumes_job_offer_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], name='job_offer_resumes_resume_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_offer_id', 'resume_id', name='job_offer_resumes_pkey')
    )
    op.drop_table('resume_categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
